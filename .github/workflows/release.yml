name: Release Workflow

on:
    release:
        types: [created]

jobs:
    build-source-and-release:
        runs-on: ubuntu-latest
        env:
            extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
        steps:
            - name: Start SSH agent
              uses: webfactory/ssh-agent@v0.4.1
              with:
                  ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
            - uses: actions/checkout@v4
            - name: Setup cache environment
              id: extcache
              uses: shivammathur/cache-extensions@v1
              with:
                  php-version: '8.1'
                  extensions: ${{ env.extensions }}
                  key: extensions-${{ hashFiles('composer.lock') }}
            - name: Cache extensions
              uses: actions/cache@v3
              with:
                  path: ${{ steps.extcache.outputs.dir }}
                  key: ${{ steps.extcache.outputs.key }}
                  restore-keys: ${{ steps.extcache.outputs.key }}
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  extensions: ${{ env.extensions }}
                  php-version: '8.1'
                  coverage: none
                  tools: cs2pr

            - name: Cache composer dependencies
              uses: actions/cache@v3
              with:
                  path: vendor
                  key: composer-${{ hashFiles('composer.lock') }}

            - name: Validate composer.json and composer.lock
              run: composer validate --strict

            - name: Run composer install
              run: APP_ENV=prod composer install --no-interaction --no-progress --ansi --prefer-dist --no-dev -o --no-scripts

            #       No Private Repos are being used
            #      - name: Add HTTP basic auth credentials
            #        run: echo '${{ secrets.COMPOSER_AUTH_JSON }}' > $GITHUB_WORKSPACE/auth.json

            - name: Setup NodeJS 18
              uses: actions/setup-node@v4
              with:
                  node-version: 18

            - name: Install yarn
              run: npm install -g yarn

            - name: Build Yarn
              run: yarn && yarn build

            - name: Compile the Release Manager
              run: composer install --no-interaction --no-progress --ansi --prefer-dist -d ./tools/ReleaseManager

            - name: Release with MagePHP
              run: ./bin/mage deploy release -vvv